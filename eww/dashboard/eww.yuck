(defwidget dashboard []
	(box :class "bg"
		(system)
	)
)

(defpoll system :interval "1s" `glue system all`)

;; system
(defwidget system [] 
	(box :class "genwin" :vexpand "false" :hexpand "false" 
		(box :orientation "v" :spacing 35 :halign "center" :valign "center" :space-evenly "false" :vexpand "false" :hexpand "false" 
			(box :class "cpu_bar" :orientation "h" :spacing 20 :space-evenly "false" :vexpand "false" :hexpand "false" 
				(label :class "iconcpu" :text "")
				(scale :min 0 :max 100 :value "${(1 - system.cpu.idle) * 100}" :active "false"))
			(box :class "mem_bar" :orientation "h" :spacing 20 :space-evenly "false" :vexpand "false" :hexpand "false" 
				(label :class "iconmem" :text "")
				(scale :min 0 :max 100 :value "${system.memory.used * 100}" :active "false"))
		)
	)
)


(defwindow background 
	:stacking "overlay" 
	:focusable "false" 
	:geometry (geometry
		:x "30%"
		:y "30%"
		:witdh "40%"
		:height "40%"
	)
	(dashboard)
)

(defwindow system 
	:stacking "fg" 
	:focusable "false" 
	:geometry (geometry 
		:x 150 
		:y 605 
		:width 350 
		:height 325
	)
	(system)
)
